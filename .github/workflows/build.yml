name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install typing-extensions
      - name: Linting
        run: |
          pip install pylint==2.6.0
          # stop the build if there are Python syntax errors or undefined names
          pylint argtyped/
      - name: Typecheck
        run: |
          pip install mypy==0.790
          mypy .
      - name: Unit test
        run: |
          pip install pytest pytest-cov
          # test against local non-installed version of library
          python -m pytest --cov=argtyped/ --cov-report=xml
      - name: Codecov
        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build dists
        run: |
          pip install wheel
          python setup.py sdist
          python setup.py bdist_wheel
      - name: Publish to PyPI
        run: |
          pip install --upgrade twine
          TWINE_USERNAME="__token__" \
          TWINE_PASSWORD="${{ secrets.pypi_password }}" \
            exec twine upload --skip-existing dist/*

  test-deploy:
    runs-on: ubuntu-latest
    needs: deploy
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
        with:
          path: "repo"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install PyPI package
        run: |
          pip install argtyped
      - name: Unit test with PyPI package
        run: |
          pip install pytest
          pip install typing-extensions
          python -m pytest repo/
